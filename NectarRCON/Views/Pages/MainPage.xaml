<ui:UiPage x:Class="NectarRCON.Views.Pages.MainPage"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:NectarRCON.Views.Pages"
      xmlns:vm="clr-namespace:NectarRCON.ViewModels"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="MainPage">
    <ui:UiPage.DataContext>
        <vm:MainPageViewModel/>
    </ui:UiPage.DataContext>
    <ui:UiPage.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <ControlTemplate x:Key="NoWordSpacingTextBoxTemplate" TargetType="{x:Type TextBox}">
            <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                              Focusable="false"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Auto"
                              VerticalContentAlignment="Top"
                              IsTabStop="False">
                    <Grid Background="{TemplateBinding Background}"
                          Margin="{TemplateBinding Padding}">
                        <TextBlock Text="{TemplateBinding Text}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   TextWrapping="Wrap"
                                   VerticalAlignment="Top"
                                   Margin="0,0,0,2" />
                    </Grid>
                </ScrollViewer>
            </Grid>
        </ControlTemplate>
    </ui:UiPage.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger
            EventName="Loaded">
            <i:InvokeCommandAction 
                PassEventArgsToCommand="True"
                Command="{Binding LoadCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger
            EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding ExitCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ui:TextBox
            ClearButtonEnabled="False"
            Name="LogText"
            FontFamily="Consolas"
            BorderThickness="0"
            Margin="5"
            Grid.Row="0"
            TextWrapping="Wrap"
            TextAlignment="Left"
            AcceptsReturn="True"
            VerticalScrollBarVisibility="Visible"
            VerticalContentAlignment="Top"
            VerticalAlignment="Stretch"
            IsReadOnly="True"
            Text="{Binding LogText}"
            />
        <Grid
            Margin="5"
            Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ui:AutoSuggestBox 
                x:Name="CommandInputBox"
                Icon="Empty"
                Text="{Binding CommandText, UpdateSourceTrigger=PropertyChanged}"
                ItemsSource="{Binding CommandList}"
                Grid.Column="0"
                BorderThickness="0"
                PlaceholderText="/">
                <i:Interaction.Triggers>
                    <i:EventTrigger
                        EventName="PreviewKeyDown">
                        <i:InvokeCommandAction
                            PassEventArgsToCommand="True"
                            Command="{Binding KeyDownCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ui:AutoSuggestBox>
            <Button 
                Grid.Column="1"
                Margin="10,0,0,0"
                Width="120"
                Content="{DynamicResource ui.main_page.run}">
                <i:Interaction.Triggers>
                    <i:EventTrigger
                        EventName="Click">
                        <i:InvokeCommandAction Command="{Binding RunCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
        
        <Grid 
            Visibility="{Binding IsDisconnection, Converter={StaticResource BooleanToVisibilityConverter}}"
            Grid.Row="0"
            Grid.RowSpan="2">
            <Grid.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Offset="0.0" Color="#CF202020" />
                    <GradientStop Offset="1.0" Color="#8F202020" />
                </LinearGradientBrush>
            </Grid.Background>
            <Border
                CornerRadius="5"
                Height="150"
                Width="200">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource SystemFillColorSolidNeutralBackground}"/>
                </Border.Background>
                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="30"
                        Direction="0"
                        Opacity="0.4"
                        ShadowDepth="0"
                        Color="#202020" />
                </Border.Effect>
                
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0">
                                        <TextBlock 
                                            HorizontalAlignment="Center"
                                            FontSize="16"
                                            Text="{DynamicResource ui.main_page.offline.single}"/>
                                        <TextBlock 
                                            Margin="0,10,0,0"
                                            FontSize="14"
                                            HorizontalAlignment="Center"
                                            Visibility="{Binding IsMultipleConnection, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Text="{DynamicResource ui.main_page.offline.multiple}"/>
                    </StackPanel>
                    <UniformGrid Margin="0,0,0,10" Grid.Row="1" HorizontalAlignment="Center" Columns="2">
                        <Button Margin="2" HorizontalAlignment="Center" Command="{Binding BackHomeCommand}" Content="{DynamicResource ui.main_page.back_home}"/>
                        <Button Margin="2" HorizontalAlignment="Center" Command="{Binding ReConnectCommand}" Content="{DynamicResource ui.main_page.re_connect}"/>
                    </UniformGrid>
                </Grid>
                
                
            </Border>
        </Grid>
        
    </Grid>
</ui:UiPage>
